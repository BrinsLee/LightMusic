apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'AndResGuard'


android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.brins.lightmusic"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    //启用DataBinding
    dataBinding {
        enabled true
    }
}

kapt {  // kapt 配置
    generateStubs = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':lib_common')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
//Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
//RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.9'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'androidx.room:room-rxjava2:2.2.0-rc01'


//AutoDispose
    implementation 'com.uber.autodispose:autodispose-kotlin:0.8.0'
    implementation 'com.uber.autodispose:autodispose-android-archcomponents-kotlin:0.8.0'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

//EventBus
    implementation 'de.greenrobot:eventbus:3.0.0-beta1'
    implementation 'com.github.bumptech.glide:glide:4.8.0'
//Room
    kapt "androidx.room:room-compiler:2.1.0"
    annotationProcessor 'com.android.databinding:compiler:3.1.4'
    implementation "androidx.room:room-runtime:2.1.0"
    annotationProcessor "android.arch.persistence.room:compiler:1.1.1"
//RoundImageView
    implementation 'com.makeramen:roundedimageview:2.3.0'
//spongycastle
    implementation 'com.madgag.spongycastle:core:1.54.0.0'
//gson
    implementation 'com.google.code.gson:gson:2.8.5'
//lottie
    implementation 'com.airbnb.android:lottie:2.7.0'
// butterknife
    /*implementation 'com.jakewharton:butterknife:10.0.0'
    kapt 'com.jakewharton:butterknife-compiler:10.0.0'*/

    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-21'
//AndroidVideoCache
    implementation 'com.danikula:videocache:2.7.1'
//JZVideoPlayer
    implementation 'cn.jzvd:jiaozivideoplayer:7.0.5'
//RxBus
    implementation 'com.hwangjr.rxbus:rxbus:1.0.6'

    // Optional, if you use support library fragments:
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation files('libs\\lite-orm-1.9.2.jar')
}

andResGuard {
    // mappingFile = file("./resource_mapping.txt")
    mappingFile = null
    use7zip = true
    useSign = true
    // it will keep the origin path of your resources when it's true
    keepRoot = false
    whiteList = [
            // your icon
            "R.mipmap.icon",
            // for fabric
            "R.string.com.crashlytics.*",
            // for umeng update
            "R.string.umeng*",
            "R.string.splash_resources_name",
            "R.string.UM*",
            "R.string.tb_*",
            "R.string.rc_*",
            "R.layout.umeng*",
            "R.layout.tb_*",
            "R.layout.rc_*",
            "R.drawable.umeng*",
            "R.drawable.tb_*",
            "R.drawable.rc_*",
            "R.drawable.u1*",
            "R.drawable.u2*",
            "R.anim.umeng*",
            "R.color.umeng*",
            "R.color.tb_*",
            "R.color.rc_*",
            "R.style.*UM*",
            "R.style.umeng*",
            "R.style.rc_*",
            "R.id.umeng*",
            "R.id.rc_*",
            // umeng share for sina
            "R.drawable.sina*",
            // for google-services.json
            "R.string.google_app_id",
            "R.string.gcm_defaultSenderId",
            "R.string.default_web_client_id",
            "R.string.ga_trackingId",
            "R.string.firebase_database_url",
            "R.string.google_api_key",
            "R.string.google_crash_reporting_api_key",
            "R.dimen.rc_*",
            // 相关SDK（登录和交易等）用到的文件需要过滤
            "R.raw.micro_services_config",
            "R.raw.config",
            "R.raw.micro_services_config",
            "R.style.GooglePayLoadingDialog",
            "R.style.MolPayLoadingDialog",
            "R.id.tv_load_dialog",
            "R.string.cfg_*",
            "R.integer.cfg_*",
            "R.bool.cfg_*"
    ]
    compressFilePattern = [
            "*.png",
            "*.jpg",
            "*.jpeg",
            "*.gif",
            "resources.arsc"
    ]
    sevenzip {
        artifact = 'com.tencent.mm:SevenZip:1.2.3'
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
    mavenCentral()
}
